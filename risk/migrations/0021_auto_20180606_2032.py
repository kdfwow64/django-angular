# Generated by Django 2.0.5 on 2018-06-07 00:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('risk', '0020_auto_20180606_1344'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectAssumption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this assumption should be treated as active')),
                ('summary', models.CharField(help_text='Summary of the assumption', max_length=600)),
                ('detail', models.TextField(help_text='Additional detail of the assumption')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Timestamp the assumption was created', null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='Timestamp the assumption was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the assumption was deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the assumption was created', null=True)),
                ('created_by', models.ForeignKey(help_text='User id of the user that created the assumption', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_assumption', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(help_text='User id if deactivated by another user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deactivated_assumption', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User id that last modified the assumption', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_assumption', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project Assumptions',
            },
        ),
        migrations.CreateModel(
            name='ProjectBenefit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this benefit should be treated as active')),
                ('summary', models.CharField(help_text='Summary of the benefit for the company', max_length=600)),
                ('detail', models.TextField(help_text='Additional detail of the benefit')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Timestamp the benefit was created', null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='Timestamp the benefit was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the benefit was deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the benefit was created', null=True)),
                ('created_by', models.ForeignKey(help_text='User id of the user that created the benefit', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_benefit', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(help_text='User id if deactivated by another user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deactivated_benefit', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User id that last modified the benefit', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_benefit', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project Benefits',
            },
        ),
        migrations.CreateModel(
            name='ProjectBudgetChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this budget change should be treated as active')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Inital budget set for the capital expenditure of project', max_digits=30)),
                ('is_increase', models.BooleanField(default=True, help_text='Designates whether this budget change should be treated as an increase')),
                ('is_capex', models.BooleanField(default=True, help_text='Designates whether this budget change should be applied to capital expenditure')),
                ('reason', models.TextField(help_text='Additional detail of the budget change')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Timestamp the budget change was created', null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='Timestamp the budget change was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the budget change was deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the budget change was created', null=True)),
                ('created_by', models.ForeignKey(help_text='User id of the user that created the budget change', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_budgetchange', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(help_text='User id if deactivated by another user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deactivated_budgetchange', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User id that last modified the budget change', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_budgetchange', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project Budget Changes',
            },
        ),
        migrations.CreateModel(
            name='ProjectDateChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this date change should be treated as active')),
                ('day', models.IntegerField(blank=True, default=0, help_text='Number of days for the change')),
                ('is_added', models.BooleanField(default=True, help_text='Designates whether the number of days should be added to the project')),
                ('reason', models.TextField(help_text='Additional detail of the date change')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Timestamp the date change was created', null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='Timestamp the date change was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the date change was deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the date change was created', null=True)),
                ('created_by', models.ForeignKey(help_text='User id of the user that created the date change', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_datechange', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(help_text='User id if deactivated by another user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deactivated_datechange', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User id that last modified the date change', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_datechange', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project Date Changes',
            },
        ),
        migrations.CreateModel(
            name='ProjectEntryMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_entry', models.ForeignKey(help_text='Entry that applies to the project', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='entryproject', to='risk.Entry')),
            ],
            options={
                'verbose_name_plural': 'Project Entries',
            },
        ),
        migrations.CreateModel(
            name='ProjectMilestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this milestone should be treated as active')),
                ('summary', models.CharField(help_text='Summary of the milestone for the company', max_length=600)),
                ('detail', models.TextField(help_text='Additional detail of the milestone')),
                ('date_start', models.DateTimeField(blank=True, help_text='Timestamp the milestone was scheduled to start', null=True)),
                ('date_complete', models.DateTimeField(blank=True, help_text='Timestamp of the milestone target completition date', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Timestamp the milestone was created', null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='Timestamp the milestone was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the milestone was deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the milestone was created', null=True)),
                ('created_by', models.ForeignKey(help_text='User id of the user that created the milestone', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_milestone', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(help_text='User id if deactivated by another user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deactivated_milestone', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User id that last modified the milestone', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_milestone', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project Milestones',
            },
        ),
        migrations.CreateModel(
            name='ProjectRisk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this risk should be treated as active')),
                ('summary', models.CharField(help_text='Summary of the risk for the company', max_length=600)),
                ('detail', models.TextField(help_text='Additional detail of the risk')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Timestamp the risk was created', null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='Timestamp the risk was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the risk was deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the risk was created', null=True)),
                ('created_by', models.ForeignKey(help_text='User id of the user that created the risk', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_projectrisk', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(help_text='User id if deactivated by another user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deactivated_projectrisk', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User id that last modified the risk', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_projectrisk', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project Risks',
            },
        ),
        migrations.CreateModel(
            name='ProjectRiskType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this risk should be treated as active')),
                ('name', models.CharField(help_text='Name of the risk type for the company', max_length=30)),
                ('desc', models.TextField(help_text='Additional description of the risk type')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Timestamp the risk type was created', null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='Timestamp the risk type was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the risk type was deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the risk type was created', null=True)),
                ('account', models.ForeignKey(default=1, help_text='Account that owns the project risk type', on_delete=django.db.models.deletion.PROTECT, related_name='account_projectrisktype', to='risk.Account')),
                ('created_by', models.ForeignKey(help_text='User id of the user that created the risk type', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_projectrisktype', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(help_text='User id if deactivated by another user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deactivated_projectrisktype', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User id that last modified the risk type', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_projectrisktype', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project Risk Types',
            },
        ),
        migrations.CreateModel(
            name='ProjectSuccessCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this criteria should be treated as active')),
                ('summary', models.CharField(help_text='Summary of the success criteria used to determine effectiveness', max_length=600)),
                ('detail', models.TextField(help_text='Additional detail of the success criteria')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Timestamp the success criteria was created', null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='Timestamp the success criteria was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the success criteria was deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the success criteria was created', null=True)),
                ('created_by', models.ForeignKey(help_text='User id of the user that created the success criteria', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_successcriteria', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(help_text='User id if deactivated by another user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deactivated_successcriteria', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User id that last modified the success criteria', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_successcriteria', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project Success Criteria',
            },
        ),
        migrations.CreateModel(
            name='ProjectUAT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this UAT should be treated as active')),
                ('summary', models.CharField(help_text='Summary of the UAT for the company', max_length=600)),
                ('detail', models.TextField(help_text='Additional detail of the UAT')),
                ('result', models.CharField(help_text='Expected results from the UAT', max_length=600)),
                ('is_acceptable', models.BooleanField(default=True, help_text='Designates whether test results from UAT were acceptable')),
                ('date_start', models.DateTimeField(blank=True, help_text='Timestamp the UAT was scheduled to start', null=True)),
                ('date_complete', models.DateTimeField(blank=True, help_text='Timestamp of the UAT target completition date', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Timestamp the UAT was created', null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='Timestamp the UAT was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the UAT was deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the UAT was created', null=True)),
                ('created_by', models.ForeignKey(help_text='User id of the user that created the UAT', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_uat', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(help_text='User id if deactivated by another user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deactivated_uat', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User id that last modified the UAT', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_uat', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project UAT',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='budget_capex',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Inital budget set for the capital expenditure of project', max_digits=30),
        ),
        migrations.AddField(
            model_name='project',
            name='budget_opex',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Inital budget set for the annual operational expenditure of project', max_digits=30),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='date_modified',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp the meeting was last modified', null=True),
        ),
        migrations.AddField(
            model_name='projectuat',
            name='project',
            field=models.ForeignKey(help_text='Project the UAT is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_uat', to='risk.Project'),
        ),
        migrations.AddField(
            model_name='projectsuccesscriteria',
            name='project',
            field=models.ForeignKey(help_text='Project the success criteria is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_successcriteria', to='risk.Project'),
        ),
        migrations.AddField(
            model_name='projectrisk',
            name='project',
            field=models.ForeignKey(help_text='Project the risk is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_projectrisk', to='risk.Project'),
        ),
        migrations.AddField(
            model_name='projectrisk',
            name='risk_type',
            field=models.ForeignKey(help_text='The risk type associated to the entry', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='projectrisk_risktype', to='risk.RiskType'),
        ),
        migrations.AddField(
            model_name='projectmilestone',
            name='project',
            field=models.ForeignKey(help_text='Project the milestone is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_milestone', to='risk.Project'),
        ),
        migrations.AddField(
            model_name='projectentrymap',
            name='id_project',
            field=models.ForeignKey(help_text='The project associated with the entry', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='projectentry', to='risk.Project'),
        ),
        migrations.AddField(
            model_name='projectdatechange',
            name='project',
            field=models.ForeignKey(help_text='Project the date change is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_datechange', to='risk.Project'),
        ),
        migrations.AddField(
            model_name='projectdatechange',
            name='risk_type',
            field=models.ForeignKey(help_text='The date change type associated to the reason for the date change', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risktype_datechange', to='risk.RiskType'),
        ),
        migrations.AddField(
            model_name='projectbudgetchange',
            name='project',
            field=models.ForeignKey(help_text='Project the budget change is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_budgetchange', to='risk.Project'),
        ),
        migrations.AddField(
            model_name='projectbudgetchange',
            name='risk_type',
            field=models.ForeignKey(help_text='The budget change type associated to the reason for the budget change', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risktype_budgetchange', to='risk.RiskType'),
        ),
        migrations.AddField(
            model_name='projectbenefit',
            name='project',
            field=models.ForeignKey(help_text='Project the benefit is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_benefit', to='risk.Project'),
        ),
        migrations.AddField(
            model_name='projectassumption',
            name='project',
            field=models.ForeignKey(help_text='Project the assumption is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_assumption', to='risk.Project'),
        ),
        migrations.AddField(
            model_name='project',
            name='entries',
            field=models.ManyToManyField(help_text='Entries that are associated to the project.', related_name='ProjectEntryMaps', through='risk.ProjectEntryMap', to='risk.Entry'),
        ),
    ]
