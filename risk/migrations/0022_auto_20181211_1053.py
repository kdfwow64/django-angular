# Generated by Django 2.1.3 on 2018-12-11 15:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('risk', '0021_auto_20181209_2317'),
    ]

    operations = [
        migrations.CreateModel(
            name='BillingMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this field row has been deleted')),
                ('date_created', models.DateTimeField(editable=False, help_text='Timestamp the field was created')),
                ('date_modified', models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True)),
                ('name', models.CharField(blank=True, help_text='Name of the field', max_length=128, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the field', null=True)),
                ('bkof_notes', models.TextField(blank=True, help_text='Backoffice notes.  DO NOT SHARE', null=True)),
                ('abbrv', models.CharField(blank=True, help_text='Abbreviation of the name', max_length=30, null=True)),
                ('sort_order', models.IntegerField(blank=True, default=0, help_text='Sort order the field should be in for form selection', null=True)),
                ('keywords', models.TextField(blank=True, help_text='Keywords used to idenify or seach the field name', null=True)),
                ('under_review', models.BooleanField(default=False, help_text='Designates whether this category has been marked for review')),
                ('example1', models.TextField(blank=True, help_text='Pratcial example of the category', null=True)),
                ('example2', models.TextField(blank=True, help_text='Pratcial example of the category', null=True)),
                ('company', models.ForeignKey(default=1, help_text='Company id for the company that manages the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_billingmethod_related_company', to='risk.Company')),
                ('created_by', models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_billingmethod_related_created', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_billingmethod_related_deactivated', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_billingmethod_related_deleted', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_billingmethod_related_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Control: Billing Methods',
            },
        ),
        migrations.CreateModel(
            name='ControlBillingMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this field row has been deleted')),
                ('date_created', models.DateTimeField(editable=False, help_text='Timestamp the field was created')),
                ('date_modified', models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True)),
                ('created_by', models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_controlbillingmethod_related_created', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_controlbillingmethod_related_deactivated', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_controlbillingmethod_related_deleted', to=settings.AUTH_USER_MODEL)),
                ('id_billing_method', models.ForeignKey(help_text='Method of billing.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='billing_method_control', to='risk.BillingMethod')),
            ],
            options={
                'verbose_name_plural': 'Control: Billing Methods Map',
            },
        ),
        migrations.CreateModel(
            name='ControlDeliveryMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this field row has been deleted')),
                ('date_created', models.DateTimeField(editable=False, help_text='Timestamp the field was created')),
                ('date_modified', models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True)),
                ('created_by', models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_controldeliverymethod_related_created', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_controldeliverymethod_related_deactivated', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_controldeliverymethod_related_deleted', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Control: Delivery Methods Map',
            },
        ),
        migrations.CreateModel(
            name='ControlOnusMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this field row has been deleted')),
                ('date_created', models.DateTimeField(editable=False, help_text='Timestamp the field was created')),
                ('date_modified', models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True)),
                ('created_by', models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_controlonusmethod_related_created', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_controlonusmethod_related_deactivated', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_controlonusmethod_related_deleted', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Control: Onus Methods Map',
            },
        ),
        migrations.CreateModel(
            name='DeliveryMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this field row has been deleted')),
                ('date_created', models.DateTimeField(editable=False, help_text='Timestamp the field was created')),
                ('date_modified', models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True)),
                ('name', models.CharField(blank=True, help_text='Name of the field', max_length=128, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the field', null=True)),
                ('bkof_notes', models.TextField(blank=True, help_text='Backoffice notes.  DO NOT SHARE', null=True)),
                ('abbrv', models.CharField(blank=True, help_text='Abbreviation of the name', max_length=30, null=True)),
                ('sort_order', models.IntegerField(blank=True, default=0, help_text='Sort order the field should be in for form selection', null=True)),
                ('keywords', models.TextField(blank=True, help_text='Keywords used to idenify or seach the field name', null=True)),
                ('under_review', models.BooleanField(default=False, help_text='Designates whether this category has been marked for review')),
                ('example1', models.TextField(blank=True, help_text='Pratcial example of the category', null=True)),
                ('example2', models.TextField(blank=True, help_text='Pratcial example of the category', null=True)),
                ('company', models.ForeignKey(default=1, help_text='Company id for the company that manages the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_deliverymethod_related_company', to='risk.Company')),
                ('created_by', models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_deliverymethod_related_created', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_deliverymethod_related_deactivated', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_deliverymethod_related_deleted', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_deliverymethod_related_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Control: Delivery Methods',
            },
        ),
        migrations.CreateModel(
            name='OnusMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this field row has been deleted')),
                ('date_created', models.DateTimeField(editable=False, help_text='Timestamp the field was created')),
                ('date_modified', models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True)),
                ('name', models.CharField(blank=True, help_text='Name of the field', max_length=128, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the field', null=True)),
                ('bkof_notes', models.TextField(blank=True, help_text='Backoffice notes.  DO NOT SHARE', null=True)),
                ('abbrv', models.CharField(blank=True, help_text='Abbreviation of the name', max_length=30, null=True)),
                ('sort_order', models.IntegerField(blank=True, default=0, help_text='Sort order the field should be in for form selection', null=True)),
                ('keywords', models.TextField(blank=True, help_text='Keywords used to idenify or seach the field name', null=True)),
                ('under_review', models.BooleanField(default=False, help_text='Designates whether this category has been marked for review')),
                ('example1', models.TextField(blank=True, help_text='Pratcial example of the category', null=True)),
                ('example2', models.TextField(blank=True, help_text='Pratcial example of the category', null=True)),
                ('company', models.ForeignKey(default=1, help_text='Company id for the company that manages the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_onusmethod_related_company', to='risk.Company')),
                ('created_by', models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_onusmethod_related_created', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_onusmethod_related_deactivated', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_onusmethod_related_deleted', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_onusmethod_related_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Control: Onus Methods',
            },
        ),
        migrations.RemoveField(
            model_name='ditype',
            name='company',
        ),
        migrations.RemoveField(
            model_name='ditype',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='ditype',
            name='deactivated_by',
        ),
        migrations.RemoveField(
            model_name='ditype',
            name='deleted_by',
        ),
        migrations.RemoveField(
            model_name='ditype',
            name='modified_by',
        ),
        migrations.AlterModelOptions(
            name='controlcategoryfunction',
            options={'verbose_name_plural': 'Control Category Feature Map'},
        ),
        migrations.RemoveField(
            model_name='control',
            name='di_type',
        ),
        migrations.RemoveField(
            model_name='control',
            name='saas',
        ),
        migrations.RemoveField(
            model_name='control',
            name='subscription',
        ),
        migrations.DeleteModel(
            name='DIType',
        ),
        migrations.AddField(
            model_name='controlonusmethod',
            name='id_control',
            field=models.ForeignKey(help_text='Name of the control', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='control_onus_method', to='risk.Control'),
        ),
        migrations.AddField(
            model_name='controlonusmethod',
            name='id_onus_method',
            field=models.ForeignKey(help_text='Method of client onus.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='onus_method_control', to='risk.OnusMethod'),
        ),
        migrations.AddField(
            model_name='controlonusmethod',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_controlonusmethod_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='controldeliverymethod',
            name='id_control',
            field=models.ForeignKey(help_text='Name of the control', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='control_delivery_method', to='risk.Control'),
        ),
        migrations.AddField(
            model_name='controldeliverymethod',
            name='id_delivery_method',
            field=models.ForeignKey(help_text='Method of vendor delivery.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='delivery_method_control', to='risk.DeliveryMethod'),
        ),
        migrations.AddField(
            model_name='controldeliverymethod',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_controldeliverymethod_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='controlbillingmethod',
            name='id_control',
            field=models.ForeignKey(help_text='Name of the control', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='control_billing_method', to='risk.Control'),
        ),
        migrations.AddField(
            model_name='controlbillingmethod',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_controlbillingmethod_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='control',
            name='billing_method',
            field=models.ManyToManyField(help_text='How is the control purchased', related_name='controlbillingmethods', through='risk.ControlBillingMethod', to='risk.BillingMethod'),
        ),
        migrations.AddField(
            model_name='control',
            name='delivery_method',
            field=models.ManyToManyField(help_text='In what form is the control provided for use', related_name='controldeliverymethods', through='risk.ControlDeliveryMethod', to='risk.DeliveryMethod'),
        ),
        migrations.AddField(
            model_name='control',
            name='onus_method',
            field=models.ManyToManyField(help_text='Who owns the burden of responsibility to produce value from the control', related_name='controlonusmethods', through='risk.ControlOnusMethod', to='risk.OnusMethod'),
        ),
    ]
