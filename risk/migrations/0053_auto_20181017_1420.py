# Generated by Django 2.0.5 on 2018-10-17 18:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('risk', '0052_auto_20181015_1537'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyMemberRoleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the company role type', max_length=128)),
                ('abbrv', models.CharField(blank=True, help_text='Abbreviation of the company role type', max_length=16)),
                ('desc', models.TextField(help_text='Description of the company role type')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether the role is active for use')),
                ('company', models.ForeignKey(default=1, help_text='The company that the role type is managed.', on_delete=django.db.models.deletion.PROTECT, related_name='company_roletype', to='risk.Company')),
            ],
            options={
                'verbose_name_plural': 'Company Member Role Types',
            },
        ),
        migrations.CreateModel(
            name='CompanyMemmberRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Role of the member', max_length=128)),
                ('desc', models.TextField(help_text='Description of the role')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether the role is active for use')),
                ('company', models.ForeignKey(default=1, help_text='The company that the member role is related', on_delete=django.db.models.deletion.PROTECT, related_name='company_memberrole', to='risk.Company')),
                ('companymemberroletype', models.ForeignKey(blank=True, help_text='The role type that the member role is related', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='company_memberroletype', to='risk.CompanyMemberRoleType')),
            ],
            options={
                'verbose_name_plural': 'Company Member Roles',
            },
        ),
        migrations.CreateModel(
            name='CompanyPlaybook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the incident response playbook', max_length=30)),
                ('summary', models.TextField(help_text='Executive summary of the incident response playbook')),
                ('evaluation_days', models.IntegerField(blank=True, help_text='Defines the default number of days an evaluation should occur', null=True)),
                ('evaluation_flg', models.BooleanField(default=False, help_text='Defines if an evaluation is due for the playbook')),
                ('company', models.ForeignKey(blank=True, help_text='The company that the playbook belongs', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='company_playbook', to='risk.Company')),
                ('created_by', models.ForeignKey(help_text='User id of the user that created the playbook', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_playbook', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(help_text='User id if deactivated by another user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deactivated_playbook', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User id that last modified the playbook', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_playbook', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Company Playbooks',
            },
        ),
        migrations.CreateModel(
            name='CompanyPlaybookAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(help_text='Description of the action a user must take for the playbook')),
                ('sequence_order', models.IntegerField(blank=True, help_text='Sequence the actions should be taken in the playbook.', null=True)),
                ('attest_days', models.IntegerField(default=365, help_text='Defines the default number of days for the assetation period')),
                ('attest_flg', models.BooleanField(default=False, help_text='Defines if an attestment is due for the playbook action')),
                ('date_last_attested', models.DateTimeField(blank=True, help_text='Timestamp the company member last attested to the responsibility', null=True)),
            ],
            options={
                'verbose_name_plural': 'Company Playbook Actions',
            },
        ),
        migrations.CreateModel(
            name='CompanyPlaybookMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_company_member', models.ForeignKey(help_text='The user associated to the company incident response playbook', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_company_playbook', to=settings.AUTH_USER_MODEL)),
                ('id_company_playbook', models.ForeignKey(help_text='The company incident repsonse playbook used if the risk occurs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_playbook_user', to='risk.CompanyPlaybook')),
            ],
            options={
                'verbose_name_plural': 'Company Playbook Members',
            },
        ),
        migrations.CreateModel(
            name='CompanyPlaybookMemberResponsibility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attest_days', models.IntegerField(default=365, help_text='Defines the default number of days for the assetation period')),
                ('attest_flg', models.BooleanField(default=False, help_text='Defines if an attestment is due for the playbook responsbility')),
                ('date_last_attested', models.DateTimeField(blank=True, help_text='Timestamp the company member last attested to the responsibility', null=True)),
                ('id_company_playbook_member', models.ForeignKey(help_text='The responsibility associated to the company member for the incident response playbook', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='member_company_playbook_responsibility', to='risk.CompanyPlaybookMember')),
            ],
            options={
                'verbose_name_plural': 'Company Playbook Member Responsibilities',
            },
        ),
        migrations.CreateModel(
            name='PlaybookActionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the company playbook action type', max_length=128)),
                ('desc', models.TextField(help_text='Description of the company playbook action type')),
                ('sort_order', models.IntegerField(blank=True, help_text='Sort order that the action type should be in for form selection', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether the action is active for use')),
                ('company', models.ForeignKey(default=1, help_text='The company that the playbook action type is managed.', on_delete=django.db.models.deletion.PROTECT, related_name='company_playbookactiontype', to='risk.Company')),
            ],
            options={
                'verbose_name_plural': 'Playbook Action Types',
            },
        ),
        migrations.CreateModel(
            name='PlaybookResponsibility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsibility', models.TextField(help_text='Description of the responsibility for the user')),
                ('company', models.ForeignKey(default=1, help_text='The company responsibilities that can be assigned to the playbook', on_delete=django.db.models.deletion.CASCADE, related_name='company_playbook_responsibilites', to='risk.Company')),
            ],
            options={
                'verbose_name_plural': 'Playbook Responsibilites',
            },
        ),
        migrations.CreateModel(
            name='PlaybookRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the company playbook role', max_length=128)),
                ('desc', models.TextField(help_text='Description of the company playbook role')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether the role is active for use')),
                ('company', models.ForeignKey(default=1, help_text='The company that the member role is managed.', on_delete=django.db.models.deletion.PROTECT, related_name='playbook_role', to='risk.Company')),
            ],
            options={
                'verbose_name_plural': 'Playbook Role',
            },
        ),
        migrations.CreateModel(
            name='PlaybookRoleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the playbook member role type', max_length=128)),
                ('desc', models.TextField(help_text='Description of the company playbook member role type')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether the member role type is active for use')),
                ('company', models.ForeignKey(default=1, help_text='The company that the member role type is managed.', on_delete=django.db.models.deletion.PROTECT, related_name='company_playbookroletype', to='risk.Company')),
            ],
            options={
                'verbose_name_plural': 'Playbook Role Types',
            },
        ),
        migrations.AlterField(
            model_name='companycontroldependency',
            name='id_companycontrol',
            field=models.ForeignKey(help_text='The company control the dependency is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dependency_companycontrol', to='risk.CompanyControl'),
        ),
        migrations.AlterField(
            model_name='companycontroldependency',
            name='id_controldependency',
            field=models.ForeignKey(help_text='The company control the dependency is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='companycontrol_dependency', to='risk.DependencyType'),
        ),
        migrations.AddField(
            model_name='playbookrole',
            name='role_type',
            field=models.ForeignKey(default=1, help_text='The role type', on_delete=django.db.models.deletion.PROTECT, related_name='member_roletype', to='risk.PlaybookRoleType'),
        ),
        migrations.AddField(
            model_name='companyplaybookmemberresponsibility',
            name='id_playbook_responsibility',
            field=models.ForeignKey(help_text='The responsibility the member has in the playbook if the risk occurs', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_playbook_responsibility', to='risk.PlaybookResponsibility'),
        ),
        migrations.AddField(
            model_name='companyplaybookmember',
            name='member_responsibilites',
            field=models.ManyToManyField(help_text='Specifies which members have responsibilites in the playbook', related_name='CompanyPlaybookMemberResponsibilities', through='risk.CompanyPlaybookMemberResponsibility', to='risk.PlaybookResponsibility'),
        ),
        migrations.AddField(
            model_name='companyplaybookmember',
            name='member_role',
            field=models.ForeignKey(blank=True, help_text='The role a member will have for the playbook', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='member_playbook_role', to='risk.PlaybookRole'),
        ),
        migrations.AddField(
            model_name='companyplaybookaction',
            name='action_type',
            field=models.ForeignKey(blank=True, help_text='The type of playbook action', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_playbook_action', to='risk.PlaybookActionType'),
        ),
        migrations.AddField(
            model_name='companyplaybookaction',
            name='company_playbook',
            field=models.ForeignKey(blank=True, help_text='The actions assigned in the company playbook', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_playbook_action', to='risk.CompanyPlaybook'),
        ),
        migrations.AddField(
            model_name='companyplaybookaction',
            name='playbook_action_owner',
            field=models.ForeignKey(help_text=' Who owns the action for incident repsonse playbook.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_owner_playbook', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='companyplaybook',
            name='playbook_company_member',
            field=models.ManyToManyField(help_text='Specifies which company members have a role in the playbook', related_name='CompanyPlaybookMembers', through='risk.CompanyPlaybookMember', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='companyplaybook',
            name='playbook_owner',
            field=models.ForeignKey(help_text=' Who owns management of the incident repsonse playbook.  This should be a contributor of the system', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='owner_playbook', to=settings.AUTH_USER_MODEL),
        ),
    ]
