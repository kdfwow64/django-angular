# Generated by Django 2.0.5 on 2018-10-28 17:35

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('risk', '0019_auto_20181028_1232'),
    ]

    operations = [
        migrations.CreateModel(
            name='MeetingAttendee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this field row has been deleted')),
                ('date_created', models.DateTimeField(editable=False, help_text='Timestamp the field was created')),
                ('date_modified', models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True)),
                ('present', models.BooleanField(default=False, help_text='Did the user attend the meeting')),
            ],
            options={
                'verbose_name_plural': 'Meeting Attendee Map',
            },
        ),
        migrations.CreateModel(
            name='MeetingEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this field row has been deleted')),
                ('date_created', models.DateTimeField(editable=False, help_text='Timestamp the field was created')),
                ('date_modified', models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True)),
            ],
            options={
                'verbose_name_plural': 'Meeting Entries',
            },
        ),
        migrations.CreateModel(
            name='MeetingTopicAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this field row has been deleted')),
                ('date_created', models.DateTimeField(editable=False, help_text='Timestamp the field was created')),
                ('date_modified', models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True)),
                ('action', models.TextField(help_text='Action to be completed for the meeting')),
                ('date_completed', models.DateTimeField(blank=True, help_text='Timestamp the action was closed', null=True)),
            ],
            options={
                'verbose_name_plural': 'Topic Actions',
            },
        ),
        migrations.CreateModel(
            name='MeetingTopicComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this field row has been deleted')),
                ('date_created', models.DateTimeField(editable=False, help_text='Timestamp the field was created')),
                ('date_modified', models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True)),
                ('date_deactivated', models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True)),
                ('comment', models.TextField(help_text='Comment on the meeting topic')),
                ('date_completed', models.DateTimeField(blank=True, help_text='Timestamp the comment was closed', null=True)),
            ],
            options={
                'verbose_name_plural': 'Topic Comments',
            },
        ),
        migrations.RemoveField(
            model_name='meetingattendeemap',
            name='id_companycontact',
        ),
        migrations.RemoveField(
            model_name='meetingattendeemap',
            name='id_meeting',
        ),
        migrations.RemoveField(
            model_name='meetingentrymap',
            name='id_entry',
        ),
        migrations.RemoveField(
            model_name='meetingentrymap',
            name='id_meeting',
        ),
        migrations.RemoveField(
            model_name='meetingtopicmap',
            name='id_meeting',
        ),
        migrations.RemoveField(
            model_name='meetingtopicmap',
            name='id_meetingtopic',
        ),
        migrations.RemoveField(
            model_name='topicaction',
            name='action_owner',
        ),
        migrations.RemoveField(
            model_name='topicactionmap',
            name='id_meetingtopic',
        ),
        migrations.RemoveField(
            model_name='topicactionmap',
            name='id_topicaction',
        ),
        migrations.RemoveField(
            model_name='topiccommentmap',
            name='id_meetingtopic',
        ),
        migrations.RemoveField(
            model_name='topiccommentmap',
            name='id_topiccomment',
        ),
        migrations.RemoveField(
            model_name='feedback',
            name='submitted_by',
        ),
        migrations.RemoveField(
            model_name='feedbackanswer',
            name='date_submitted',
        ),
        migrations.RemoveField(
            model_name='feedbackcorrespondence',
            name='date_submitted',
        ),
        migrations.RemoveField(
            model_name='meeting',
            name='topics',
        ),
        migrations.RemoveField(
            model_name='meetingtopic',
            name='actions',
        ),
        migrations.RemoveField(
            model_name='meetingtopic',
            name='comments',
        ),
        migrations.RemoveField(
            model_name='meetingtype',
            name='desc_alt',
        ),
        migrations.RemoveField(
            model_name='meetingtype',
            name='desc_form',
        ),
        migrations.AddField(
            model_name='feedback',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedback_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='date_deactivated',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True),
        ),
        migrations.AddField(
            model_name='feedback',
            name='date_deleted',
            field=models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True),
        ),
        migrations.AddField(
            model_name='feedback',
            name='date_modified',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True),
        ),
        migrations.AddField(
            model_name='feedback',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedback_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedback_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Designates whether this field row has been deleted'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Designates whether the feedback should be made public for application users'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedback_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackanswer',
            name='date_created',
            field=models.DateTimeField(default=datetime.datetime(2018, 10, 28, 17, 34, 11, 753314, tzinfo=utc), editable=False, help_text='Timestamp the field was created'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='feedbackanswer',
            name='date_deactivated',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True),
        ),
        migrations.AddField(
            model_name='feedbackanswer',
            name='date_deleted',
            field=models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True),
        ),
        migrations.AddField(
            model_name='feedbackanswer',
            name='date_modified',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True),
        ),
        migrations.AddField(
            model_name='feedbackanswer',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackanswer_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackanswer',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackanswer_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackanswer',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application'),
        ),
        migrations.AddField(
            model_name='feedbackanswer',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Designates whether this field row has been deleted'),
        ),
        migrations.AddField(
            model_name='feedbackanswer',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackanswer_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackcorrespondence',
            name='date_created',
            field=models.DateTimeField(default=datetime.datetime(2018, 10, 28, 17, 34, 19, 929322, tzinfo=utc), editable=False, help_text='Timestamp the field was created'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='feedbackcorrespondence',
            name='date_deactivated',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True),
        ),
        migrations.AddField(
            model_name='feedbackcorrespondence',
            name='date_deleted',
            field=models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True),
        ),
        migrations.AddField(
            model_name='feedbackcorrespondence',
            name='date_modified',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True),
        ),
        migrations.AddField(
            model_name='feedbackcorrespondence',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackcorrespondence_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackcorrespondence',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackcorrespondence_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackcorrespondence',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application'),
        ),
        migrations.AddField(
            model_name='feedbackcorrespondence',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Designates whether this field row has been deleted'),
        ),
        migrations.AddField(
            model_name='feedbackcorrespondence',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackcorrespondence_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackquestion',
            name='date_deactivated',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True),
        ),
        migrations.AddField(
            model_name='feedbackquestion',
            name='date_deleted',
            field=models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True),
        ),
        migrations.AddField(
            model_name='feedbackquestion',
            name='date_modified',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True),
        ),
        migrations.AddField(
            model_name='feedbackquestion',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackquestion_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackquestion',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackquestion_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackquestion',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Designates whether this field row has been deleted'),
        ),
        migrations.AddField(
            model_name='feedbackquestion',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackquestion_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='company',
            field=models.ForeignKey(default=1, help_text='Company id for the company that manages the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackstatus_related_company', to='risk.Company'),
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackstatus_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='date_created',
            field=models.DateTimeField(default=datetime.datetime(2018, 10, 28, 17, 34, 26, 404962, tzinfo=utc), editable=False, help_text='Timestamp the field was created'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='date_deactivated',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True),
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='date_deleted',
            field=models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True),
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='date_modified',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True),
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackstatus_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackstatus_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application'),
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Designates whether this field row has been deleted'),
        ),
        migrations.AddField(
            model_name='feedbackstatus',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackstatus_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='company',
            field=models.ForeignKey(default=1, help_text='Company id for the company that manages the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbacktype_related_company', to='risk.Company'),
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbacktype_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='date_created',
            field=models.DateTimeField(default=datetime.datetime(2018, 10, 28, 17, 34, 33, 151923, tzinfo=utc), editable=False, help_text='Timestamp the field was created'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='date_deactivated',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True),
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='date_deleted',
            field=models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True),
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='date_modified',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True),
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbacktype_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbacktype_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application'),
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Designates whether this field row has been deleted'),
        ),
        migrations.AddField(
            model_name='feedbacktype',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbacktype_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meeting',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meeting_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meeting',
            name='date_deactivated',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True),
        ),
        migrations.AddField(
            model_name='meeting',
            name='date_deleted',
            field=models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True),
        ),
        migrations.AddField(
            model_name='meeting',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meeting_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meeting',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meeting_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meeting',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Designates whether this field row has been deleted'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meeting_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopic',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopic_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopic',
            name='current_meeting',
            field=models.ForeignKey(help_text='Meeting that the topic is currently  under.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='current_meeting', to='risk.Meeting'),
        ),
        migrations.AddField(
            model_name='meetingtopic',
            name='date_deactivated',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True),
        ),
        migrations.AddField(
            model_name='meetingtopic',
            name='date_deleted',
            field=models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True),
        ),
        migrations.AddField(
            model_name='meetingtopic',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopic_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopic',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopic_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopic',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application'),
        ),
        migrations.AddField(
            model_name='meetingtopic',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Designates whether this field row has been deleted'),
        ),
        migrations.AddField(
            model_name='meetingtopic',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopic_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtype',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtype_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtype',
            name='date_created',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Timestamp the field was created'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='meetingtype',
            name='date_deactivated',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last deactivated', null=True),
        ),
        migrations.AddField(
            model_name='meetingtype',
            name='date_deleted',
            field=models.DateTimeField(blank=True, help_text='Timestamp the individual was created', null=True),
        ),
        migrations.AddField(
            model_name='meetingtype',
            name='date_modified',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True),
        ),
        migrations.AddField(
            model_name='meetingtype',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtype_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtype',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtype_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtype',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application'),
        ),
        migrations.AddField(
            model_name='meetingtype',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Designates whether this field row has been deleted'),
        ),
        migrations.AddField(
            model_name='meetingtype',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtype_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='feedback',
            name='date_created',
            field=models.DateTimeField(default=datetime.datetime(2018, 10, 28, 17, 34, 47, 185113, tzinfo=utc), editable=False, help_text='Timestamp the field was created'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='feedbackanswer',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackanswer_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='feedbackcorrespondence',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackcorrespondence_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='feedbackquestion',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_feedbackquestion_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='feedbackquestion',
            name='date_created',
            field=models.DateTimeField(default=datetime.datetime(2018, 10, 28, 17, 34, 56, 826303, tzinfo=utc), editable=False, help_text='Timestamp the field was created'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='feedbackquestion',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application'),
        ),
        migrations.AlterField(
            model_name='feedbackstatus',
            name='description',
            field=models.TextField(blank=True, help_text='Description of the field', null=True),
        ),
        migrations.AlterField(
            model_name='feedbackstatus',
            name='name',
            field=models.CharField(blank=True, help_text='Name of the field', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='feedbacktype',
            name='description',
            field=models.TextField(blank=True, help_text='Description of the field', null=True),
        ),
        migrations.AlterField(
            model_name='feedbacktype',
            name='name',
            field=models.CharField(blank=True, help_text='Name of the field', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='attendees',
            field=models.ManyToManyField(help_text='Company contacts that were invited to the meeting.', related_name='MeetingAttedees', through='risk.MeetingAttendee', to='risk.CompanyContact'),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='date_created',
            field=models.DateTimeField(default=datetime.datetime(2018, 10, 28, 17, 35, 2, 805861, tzinfo=utc), editable=False, help_text='Timestamp the field was created'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='meeting',
            name='date_modified',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='entries',
            field=models.ManyToManyField(help_text='Entries that are discussed in the meeting.', related_name='MeetingEntryMap', through='risk.MeetingEntry', to='risk.Entry'),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this field row should be treated as an active field and availiable for use by the application'),
        ),
        migrations.AlterField(
            model_name='meetingtopic',
            name='date_created',
            field=models.DateTimeField(default=datetime.datetime(2018, 10, 28, 17, 35, 8, 442288, tzinfo=utc), editable=False, help_text='Timestamp the field was created'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='meetingtopic',
            name='date_modified',
            field=models.DateTimeField(blank=True, help_text='Timestamp the field was last modified', null=True),
        ),
        migrations.AlterField(
            model_name='meetingtopic',
            name='inital_meeting',
            field=models.ForeignKey(help_text='Meeting that the topic was originally created  under.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orginal_meeting', to='risk.Meeting'),
        ),
        migrations.AlterField(
            model_name='meetingtype',
            name='company',
            field=models.ForeignKey(default=1, help_text='Company id for the company that manages the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtype_related_company', to='risk.Company'),
        ),
        migrations.AlterField(
            model_name='meetingtype',
            name='description',
            field=models.TextField(blank=True, help_text='Description of the field', null=True),
        ),
        migrations.AlterField(
            model_name='meetingtype',
            name='name',
            field=models.CharField(blank=True, help_text='Name of the field', max_length=128, null=True),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['date_modified'], name='risk_meetin_date_mo_317982_idx'),
        ),
        migrations.DeleteModel(
            name='MeetingAttendeeMap',
        ),
        migrations.DeleteModel(
            name='MeetingEntryMap',
        ),
        migrations.DeleteModel(
            name='MeetingTopicMap',
        ),
        migrations.DeleteModel(
            name='TopicAction',
        ),
        migrations.DeleteModel(
            name='TopicActionMap',
        ),
        migrations.DeleteModel(
            name='TopicComment',
        ),
        migrations.DeleteModel(
            name='TopicCommentMap',
        ),
        migrations.AddField(
            model_name='meetingtopiccomment',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopiccomment_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopiccomment',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopiccomment_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopiccomment',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopiccomment_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopiccomment',
            name='meeting_topic',
            field=models.ForeignKey(help_text='The meeting topic the comment is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='meetingtopic_comment', to='risk.MeetingTopic'),
        ),
        migrations.AddField(
            model_name='meetingtopiccomment',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopiccomment_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopicaction',
            name='action_owner',
            field=models.ForeignKey(help_text='Individual that owns the meeting action', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='actionowner', to='risk.CompanyContact'),
        ),
        migrations.AddField(
            model_name='meetingtopicaction',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopicaction_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopicaction',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopicaction_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopicaction',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopicaction_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingtopicaction',
            name='meeting_topic',
            field=models.ForeignKey(help_text='The meeting topic the action is associated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='meetingtopic_action', to='risk.MeetingTopic'),
        ),
        migrations.AddField(
            model_name='meetingtopicaction',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingtopicaction_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingentry',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingentry_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingentry',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingentry_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingentry',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingentry_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingentry',
            name='id_entry',
            field=models.ForeignKey(help_text='Entry that was discussed in the meeting', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='entrymeeting', to='risk.Entry'),
        ),
        migrations.AddField(
            model_name='meetingentry',
            name='id_meeting',
            field=models.ForeignKey(help_text='The meeting the entry was discussed', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='meetingentry', to='risk.Meeting'),
        ),
        migrations.AddField(
            model_name='meetingentry',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingentry_related_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingattendee',
            name='created_by',
            field=models.ForeignKey(default=13, help_text='User id of the user that created the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingattendee_related_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingattendee',
            name='deactivated_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deactivated the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingattendee_related_deactivated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingattendee',
            name='deleted_by',
            field=models.ForeignKey(blank=True, help_text='User id that last deleted the field', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingattendee_related_deleted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meetingattendee',
            name='id_companycontact',
            field=models.ForeignKey(help_text='Individual that was invited to the meeting', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pocmeeting', to='risk.CompanyContact'),
        ),
        migrations.AddField(
            model_name='meetingattendee',
            name='id_meeting',
            field=models.ForeignKey(help_text='The meeting the POC was invited', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='meetingpoc', to='risk.Meeting'),
        ),
        migrations.AddField(
            model_name='meetingattendee',
            name='modified_by',
            field=models.ForeignKey(default=13, help_text='User id that last modified the field', on_delete=django.db.models.deletion.PROTECT, related_name='risk_meetingattendee_related_modified', to=settings.AUTH_USER_MODEL),
        ),
    ]
